{"version":3,"file":"static/js/441.d065315c.chunk.js","mappings":"2NAGMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDN,aAAAA,EACAK,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKvBC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnCV,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAEf,OACE,kBAAME,SAAUI,EAAhB,WACE,kBAAOK,QAASJ,EAAhB,yBACA,kBACEK,GAAIL,EACJT,KAAK,QACLe,KAAK,QACLC,MAAOf,EACPgB,SAAUV,KAEZ,kBAAOM,QAASJ,EAAhB,4BACA,kBACEK,GAAIF,EACJG,KAAK,WACLf,KAAK,WACLgB,MAAOd,EACPe,SAAUV,KAEZ,2CAGL,C,sBCnCc,SAASW,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,uCACA,SAACjB,EAAD,CAAWC,SAPC,SAAAiB,GACdF,GAASG,EAAAA,EAAAA,IAAMD,GAChB,MAQF,C,8FChBc,SAAShB,EAAT,GAA8C,IAA3BN,EAA0B,EAA1BA,aAAcK,EAAY,EAAZA,SAC9C,GAA0BmB,EAAAA,EAAAA,WAAS,UAAKxB,IAAxC,eAAOO,EAAP,KAAckB,EAAd,KAiBA,MAAO,CAAElB,MAAAA,EAAOkB,SAAAA,EAAUjB,aAfL,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACdT,EAA+BS,EAA/BT,MAAOhB,EAAwByB,EAAxBzB,KAAMe,EAAkBU,EAAlBV,KAAMW,EAAYD,EAAZC,QACrBC,EAAoB,aAATZ,EAAsBW,EAAUV,EACjDQ,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEf5B,EAAO2B,GAFQ,GAInB,EAQuCnB,aANnB,SAAAqB,GACnBA,EAAEC,iBACF1B,GAAS,UAAKE,IACdkB,GAAS,UAAKzB,GACf,EAGF,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPege/LoginPege.jsx","shared/hooks/useForm.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport useForm from 'shared/hooks/useForm';\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function LoginForm({ onSubmit }) {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={emailId}>User email</label>\n      <input\n        id={emailId}\n        name=\"email\"\n        type=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <label htmlFor={emailId}>User password</label>\n      <input\n        id={passwordId}\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <button>Register</button>\n    </form>\n  );\n}\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/authOperetion';\n\nexport default function LoginPege() {\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div>\n      <h1>LoginPege</h1>\n      <LoginForm onSubmit={onLogin} />\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useForm({ initialState, onSubmit }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n}\n"],"names":["initialState","name","email","password","LoginForm","onSubmit","useForm","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","htmlFor","id","type","value","onChange","LoginPege","dispatch","useDispatch","data","login","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}