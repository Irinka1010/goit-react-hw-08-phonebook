{"version":3,"file":"static/js/51.a6fbc936.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","redux/selectors.js","components/Phonebook/Phonebook.jsx","pages/MyPhonebook/MyPhonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from 'nanoid';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useState } from 'react';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm({ onSubmit }) {\n  const [state, setState] = useState({ initialState });\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleChange = ev => {\n    const { name, value } = ev.target;\n    setState(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handelSubmit = ev => {\n    ev.preventDefault();\n    const { name, number } = state;\n    onSubmit({ name, number });\n    setState(initialState);\n  };\n\n  const { name, number } = state;\n  return (\n    <form onSubmit={handelSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        id={nameId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <label htmlFor={numberId}>Number</label>\n      <input\n        id={numberId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Phone\"\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"item\":\"ContactsList_item__6gc1x\",\"marker\":\"ContactsList_marker__vknt1\",\"button\":\"ContactsList_button__EDc5e\"};","import PropTypes from 'prop-types';\nimport css from 'components/ContactsList/ContactsList.module.css';\nexport default function ContactsList({ items, removeContact }) {\n  const elements = items.map(({ name, number, id }) => {\n    return (\n      <li className={css.item} key={id}>\n        <span className={css.marker}></span>\n        <p>{`${name} : ${number}`}</p>\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={() => {\n            removeContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return <ol className={css.list}>{elements}</ol>;\n}\n\nContactsList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      createdAt: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport css from 'components/Filter/Filter.module.css';\nexport default function Filter({ onChange, value }) {\n  const filterid = nanoid();\n  return (\n    <div className={css.filter}>\n      <label htmlFor={filterid}>Find contacts by name</label>\n      <input\n        id={filterid}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"Phonebook_formContact__GGDdR\",\"contacts\":\"Phonebook_contacts__FMhKp\",\"title\":\"Phonebook_title__ipARL\"};","export const getFilter = state => state.filter;\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const filteredContacts = contacts.items.filter(({ name, number }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const normalizedNumber = number.toLocaleLowerCase();\n    const result =\n      normalizedName.includes(normalizedFilter) ||\n      normalizedNumber.includes(normalizedFilter);\n\n    return result;\n  });\n  return filteredContacts;\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport css from 'components/Phonebook/Phonebook.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts, getFilter, getState } from 'redux/selectors';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from 'redux/contactsOperation';\nimport { setFilter } from 'redux/filterSlice';\nimport { useEffect } from 'react';\n\nexport default function Phonebook() {\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const { loading, error } = useSelector(getState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const hendelChenge = ev => {\n    const { value } = ev.target;\n    dispatch(setFilter(value));\n  };\n\n  const onAddContact = contact => {\n    const action = addContact(contact);\n    dispatch(action);\n  };\n  const onRemoveContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <>\n      <div className={css.formContact}>\n        <h2 className={css.title}>Phonebook</h2>\n        <ContactForm onSubmit={onAddContact} />\n      </div>\n      <div className={css.contacts}>\n        <h2 className={css.title}>Contacts</h2>\n        <Filter onChange={hendelChenge} value={filter} />\n        {contacts.length > 0 && (\n          <ContactsList items={contacts} removeContact={onRemoveContact} />\n        )}\n        {loading && <p>...loading</p>}\n        {error && <p>oops, something went wrong</p>}\n      </div>\n    </>\n  );\n}\n","import Phonebook from 'components/Phonebook/Phonebook';\n\nexport default function MyPhonebook() {\n  return (\n    <div>\n      <h1>RegisterPege</h1>\n      <Phonebook />\n    </div>\n  );\n}\n"],"names":["initialState","name","number","ContactForm","onSubmit","useState","state","setState","nameId","nanoid","numberId","handleChange","ev","target","value","prev","preventDefault","htmlFor","id","type","pattern","title","required","placeholder","onChange","className","css","ContactsList","items","removeContact","elements","map","onClick","Filter","filterid","getFilter","filter","getState","contacts","loading","error","getFilteredContacts","normalizedFilter","toLocaleLowerCase","normalizedName","normalizedNumber","includes","Phonebook","useSelector","dispatch","useDispatch","useEffect","fetchContacts","contact","action","addContact","setFilter","length","MyPhonebook"],"sourceRoot":""}