{"version":3,"file":"static/js/12.c935a3fc.chunk.js","mappings":"6NAGMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDN,aAAAA,EACAK,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAIvBC,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACjCC,GAAUF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCE,GAAaH,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnCX,EAA0BM,EAA1BN,KAAMC,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAErB,OACE,kBAAME,SAAUI,EAAhB,WACE,kBAAOM,QAASL,EAAhB,wBACA,kBACEM,GAAIN,EACJO,KAAK,OACLhB,KAAK,OACLiB,YAAY,OACZC,MAAOlB,EACPmB,SAAUZ,KAEZ,kBAAOO,QAASF,EAAhB,yBACA,kBACEG,GAAIH,EACJZ,KAAK,QACLgB,KAAK,QACLE,MAAOjB,EACPkB,SAAUZ,KAEZ,kBAAOO,QAASF,EAAhB,4BACA,kBACEG,GAAIF,EACJG,KAAK,WACLhB,KAAK,WACLkB,MAAOhB,EACPiB,SAAUZ,KAEZ,2CAGL,C,wBC5Cc,SAASa,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,0CACA,SAACnB,EAAD,CAAcC,SAPC,SAAAmB,GACjBF,GAASG,EAAAA,EAAAA,IAAOD,GACjB,MAQF,C,iGChBc,SAASlB,EAAT,GAA8C,IAA3BN,EAA0B,EAA1BA,aAAcK,EAAY,EAAZA,SAC9C,GAA0BqB,EAAAA,EAAAA,WAAS,UAAK1B,IAAxC,eAAOO,EAAP,KAAcoB,EAAd,KAiBA,MAAO,CAAEpB,MAAAA,EAAOoB,SAAAA,EAAUnB,aAfL,SAAC,GAAgB,IAAdoB,EAAa,EAAbA,OACdT,EAA+BS,EAA/BT,MAAOlB,EAAwB2B,EAAxB3B,KAAMgB,EAAkBW,EAAlBX,KAAMY,EAAYD,EAAZC,QACrBC,EAAoB,aAATb,EAAsBY,EAAUV,EACjDQ,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEf9B,EAAO6B,GAFQ,GAInB,EAQuCrB,aANnB,SAAAuB,GACnBA,EAAEC,iBACF5B,GAAS,UAAKE,IACdoB,GAAS,UAAK3B,GACf,EAGF,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPege/RegisterPege.jsx","shared/hooks/useForm.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport useForm from 'shared/hooks/useForm';\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterForm({ onSubmit }) {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const nameId = useMemo(() => nanoid(), []);\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>User name</label>\n      <input\n        id={nameId}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <label htmlFor={emailId}>User email</label>\n      <input\n        id={emailId}\n        name=\"email\"\n        type=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <label htmlFor={emailId}>User password</label>\n      <input\n        id={passwordId}\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n      />\n      <button>Register</button>\n    </form>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { useDispatch } from 'react-redux';\n\nimport { signup } from 'redux/auth/authOperetion';\n\nexport default function RegisterPege() {\n  const dispatch = useDispatch();\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      <h1>RegisterPege</h1>\n      <RegisterForm onSubmit={onRegister} />\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useForm({ initialState, onSubmit }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n}\n"],"names":["initialState","name","email","password","RegisterForm","onSubmit","useForm","state","handleChange","handleSubmit","nameId","useMemo","nanoid","emailId","passwordId","htmlFor","id","type","placeholder","value","onChange","RegisterPege","dispatch","useDispatch","data","signup","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}